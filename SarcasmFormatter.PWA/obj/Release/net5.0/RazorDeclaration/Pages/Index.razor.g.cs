// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SarcasmFormatter.PWA.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using SarcasmFormatter.PWA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\_Imports.razor"
using SarcasmFormatter.PWA.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\Pages\Index.razor"
using System.Text;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\Pages\Index.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 21 "C:\repos\SarcasmFormatter.PWA\SarcasmFormatter.PWA\Pages\Index.razor"
 
    private static readonly Regex ValidCharsRegex= new Regex(@"[^\s\d\W]");

    private string _input;
    private bool _startLowerCase;

    [Parameter]
    public bool StartLowerCase
    {
        get => _startLowerCase;
        set
        {
            _startLowerCase = value;
            AlternateStringCase();
        }
    }

    [Parameter]
    public string Input
    {
        get => _input;
        set
        {
            _input = value;
            AlternateStringCase();
        }
    }

    public string FormattedString { get; private set; }

    void AlternateStringCase()
    {
        if (Input == null)
        {
            FormattedString = string.Empty;
            return;
        }

        var inputString = Input;
        var str = new StringBuilder();
        var lowerCase = StartLowerCase;

        for (var i = 0; i < inputString.Length; i++)
        {
            if (ValidCharsRegex.IsMatch(inputString[i].ToString()))
            {
                if (Char.ToLowerInvariant(inputString[i]) == 'i')
                {
                    str.Append('i');
                }
                else if (Char.ToLowerInvariant(inputString[i]) == 'l')
                {
                    str.Append('L');
                }
                else if (!lowerCase)
                {
                    str.Append(Char.ToUpperInvariant(inputString[i]));
                    lowerCase = true;
                }
                else
                {
                    str.Append(Char.ToLowerInvariant(inputString[i]));
                    lowerCase = false;
                }
            }
            else
            {
                str.Append(inputString[i]);
            }
        }
        FormattedString =  str.ToString();
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
